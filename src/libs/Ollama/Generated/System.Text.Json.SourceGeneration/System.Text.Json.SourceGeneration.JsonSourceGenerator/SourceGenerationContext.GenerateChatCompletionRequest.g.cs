// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Ollama
{
    internal sealed partial class SourceGenerationContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.GenerateChatCompletionRequest>? _GenerateChatCompletionRequest;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.GenerateChatCompletionRequest> GenerateChatCompletionRequest
        {
            get => _GenerateChatCompletionRequest ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.GenerateChatCompletionRequest>)Options.GetTypeInfo(typeof(global::Ollama.GenerateChatCompletionRequest));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.GenerateChatCompletionRequest> Create_GenerateChatCompletionRequest(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::Ollama.GenerateChatCompletionRequest>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.GenerateChatCompletionRequest> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::Ollama.GenerateChatCompletionRequest>
                {
                    ObjectCreator = () => new global::Ollama.GenerateChatCompletionRequest(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => GenerateChatCompletionRequestPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    SerializeHandler = null
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::Ollama.GenerateChatCompletionRequest>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] GenerateChatCompletionRequestPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[7];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = null,
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).Model,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).Model = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Model",
                JsonPropertyName = "model"
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info0);
            properties[0].IsRequired = true;

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.IList<global::Ollama.Message>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = null,
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).Messages,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).Messages = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Messages",
                JsonPropertyName = "messages"
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.IList<global::Ollama.Message>>(options, info1);
            properties[1].IsRequired = true;

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::Ollama.GenerateChatCompletionRequestFormat?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = GetConverterForNullableProperty<global::Ollama.GenerateChatCompletionRequestFormat>(new global::OpenApiGenerator.JsonConverters.GenerateChatCompletionRequestFormatJsonConverter(), options),
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).Format,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).Format = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Format",
                JsonPropertyName = "format"
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::Ollama.GenerateChatCompletionRequestFormat?>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::Ollama.RequestOptions>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = null,
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).Options,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).Options = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Options",
                JsonPropertyName = "options"
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::Ollama.RequestOptions>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = null,
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).Stream,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).Stream = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Stream",
                JsonPropertyName = "stream"
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int?>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = null,
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).KeepAlive,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).KeepAlive = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "KeepAlive",
                JsonPropertyName = "keep_alive"
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int?>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.IDictionary<string, object>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.GenerateChatCompletionRequest),
                Converter = null,
                Getter = static obj => ((global::Ollama.GenerateChatCompletionRequest)obj).AdditionalProperties,
                Setter = static (obj, value) => ((global::Ollama.GenerateChatCompletionRequest)obj).AdditionalProperties = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = true,
                NumberHandling = null,
                PropertyName = "AdditionalProperties",
                JsonPropertyName = null
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.IDictionary<string, object>>(options, info6);

            return properties;
        }
    }
}
