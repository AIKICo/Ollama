// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Ollama
{
    internal sealed partial class SourceGenerationContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.ModelInfo>? _ModelInfo;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.ModelInfo> ModelInfo
        {
            get => _ModelInfo ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.ModelInfo>)Options.GetTypeInfo(typeof(global::Ollama.ModelInfo));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.ModelInfo> Create_ModelInfo(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::Ollama.ModelInfo>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Ollama.ModelInfo> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::Ollama.ModelInfo>
                {
                    ObjectCreator = () => new global::Ollama.ModelInfo(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => ModelInfoPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    SerializeHandler = null
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::Ollama.ModelInfo>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] ModelInfoPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[8];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).License,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).License = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "License",
                JsonPropertyName = "license"
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).Modelfile,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).Modelfile = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Modelfile",
                JsonPropertyName = "modelfile"
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).Parameters,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).Parameters = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Parameters",
                JsonPropertyName = "parameters"
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).Template,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).Template = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Template",
                JsonPropertyName = "template"
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info3);

            var info4 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<string>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).System,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).System = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "System",
                JsonPropertyName = "system"
            };
            
            properties[4] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<string>(options, info4);

            var info5 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::Ollama.ModelDetails>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).Details,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).Details = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Details",
                JsonPropertyName = "details"
            };
            
            properties[5] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::Ollama.ModelDetails>(options, info5);

            var info6 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.IList<global::Ollama.Message>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).Messages,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).Messages = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Messages",
                JsonPropertyName = "messages"
            };
            
            properties[6] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.IList<global::Ollama.Message>>(options, info6);

            var info7 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.IDictionary<string, object>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Ollama.ModelInfo),
                Converter = null,
                Getter = static obj => ((global::Ollama.ModelInfo)obj).AdditionalProperties,
                Setter = static (obj, value) => ((global::Ollama.ModelInfo)obj).AdditionalProperties = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = true,
                NumberHandling = null,
                PropertyName = "AdditionalProperties",
                JsonPropertyName = null
            };
            
            properties[7] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.IDictionary<string, object>>(options, info7);

            return properties;
        }
    }
}
